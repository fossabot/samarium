name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 7 * * *" # run at 7am everyday to keep fresh

env:
  # Path to the CMake build directory.
  build: "${{ github.workspace }}/build"
  config: "Release"
  CONAN_SYSREQUIRES_MODE: "enabled"

jobs:
  linux-test:
    runs-on: ubuntu-latest

    env:
      SONAR_SCANNER_VERSION: 4.6.2.2472
      SONAR_SERVER_URL: "https://sonarcloud.io"
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Download and set up sonar-scanner
        env:
          SONAR_SCANNER_DOWNLOAD_URL: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
        run: |
          mkdir -p $HOME/.sonar
          curl -sSLo $HOME/.sonar/sonar-scanner.zip ${{ env.SONAR_SCANNER_DOWNLOAD_URL }} 
          unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
          echo "$HOME/.sonar/sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-linux/bin" >> $GITHUB_PATH

      - name: Download and set up build-wrapper
        env:
          BUILD_WRAPPER_DOWNLOAD_URL: ${{ env.SONAR_SERVER_URL }}/static/cpp/build-wrapper-linux-x86.zip
        run: |
          curl -sSLo $HOME/.sonar/build-wrapper-linux-x86.zip ${{ env.BUILD_WRAPPER_DOWNLOAD_URL }}
          unzip -o $HOME/.sonar/build-wrapper-linux-x86.zip -d $HOME/.sonar/
          echo "$HOME/.sonar/build-wrapper-linux-x86" >> $GITHUB_PATH

      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 11
          platform: x64

      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v1.12
        with:
          cmake-version: "3.22.x"

      - name: Install Conan
        id: conan
        uses: turtlebrowser/get-conan@main

      - name: Install gcovr
        run: pip3 install gcovr

      - name: Install other deps
        run: sudo apt-get update && sudo apt-get install libtbb-dev tree

      - name: Check Tool Versions
        run: |
          conan    --version
          cmake    --version
          c++      --version

      - name: Configure Conan
        run: |
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libstdc++11 default

      - name: CMake Configure
        run: cmake -B build -DCMAKE_BUILD_TYPE="Debug"

      - name: CMake Build
        run: build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }}  cmake --build build -j 2

      - name: CTest
        working-directory: ./build
        run: ./test/samarium_tests
        continue-on-error: true
      - name: Allow failures
        run: true # https://github.com/actions/toolkit/issues/399#issuecomment-1058231820

      - name: Generate Coverage
        working-directory: ./build
        run: make coverage

      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner --define sonar.host.url="${{ env.SONAR_SERVER_URL }}" --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"

      - name: View Source Tree
        run: tree


  linux-install:
    runs-on: ubuntu-latest
    steps:
      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 11
          platform: x64

      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v1.12
        with:
          cmake-version: "3.22.x"

      - name: Install Conan
        id: conan
        uses: turtlebrowser/get-conan@main

      - name: Install other deps
        run: sudo apt-get update && sudo apt-get install libtbb-dev

      - name: Check Tool Versions
        run: |
          conan    --version
          cmake    --version
          c++      --version

      - name: Configure Conan
        run: |
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libstdc++11 default

      - name: Git Clone
        run: git clone https://github.com/strangeQuark1041/samarium.git

      - name: Conan Create
        run: conan create samarium -b missing

      - name: Run Example
      - run: |
          git clone --depth 1 https://github.com/strangeQuark1041/samarium_example.git .
          conan install . -b missing -if build
          cmake -B build
          cmake --build build
          ./build/bin/example

  windows-test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Conan
        id: conan
        uses: turtlebrowser/get-conan@main

      - name: Configure Conan
        run: |
          conan profile new default --detect

      - name: CMake Configure
        run: cmake -B build

      - name: CMake Build
        run: cmake --build build --config Release -j 2
        # https://stackoverflow.com/a/20423820

      - name: CTest
        working-directory: build/test
        run: samarium_tests
        continue-on-error: true
      - name: Allow failures
        run: true

  windows-install:
    runs-on: windows-latest
    steps:
      - name: Install Conan
        id: conan
        uses: turtlebrowser/get-conan@main

      - name: Configure Conan
        run: |
          conan profile new default --detect

      - name: Git Clone
        run: git clone https://github.com/strangeQuark1041/samarium.git

      - name: Conan Create
        run: conan create samarium -b missing

      - name: Run Example
      - run: |
          git clone --depth 1 https://github.com/strangeQuark1041/samarium_example.git .
          conan install . -b missing -if build
          cmake -B build
          cmake --build build
          .\build\bin\example
