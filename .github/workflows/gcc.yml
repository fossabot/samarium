# Github Action: Linux gcc build

name: GCC

on:
  push:
    branches: [main, gl]
  pull_request:
    branches: [main]
  schedule:
    - cron: "0 2 * * *" # run everyday to keep fresh

env:
  # Path to the CMake build directory.
  build: "${{ github.workspace }}/build"

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3

      - name: Install GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 11
          platform: x64

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v1.13

      - name: Install Conan
        id: conan
        uses: turtlebrowser/get-conan@main

      - name: Install sonar-scanner and build-wrapper
        uses: sonarsource/sonarcloud-github-c-cpp@v1.3

      - name: Check Tool Versions
        run: |
          conan    --version
          cmake    --version
          g++      --version

      - name: List Files
        run: ls -AlhR -I .git

      - name: Run Conan
        run: |
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libstdc++11 default
          conan install . -b missing -if build -pr:b=default -o samarium:build_tests=True -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True

      - name: CMake Configure
        run: cmake --preset=ci

      - name: CMake Build
        run: build-wrapper-linux-x86-64 --out-dir "build_wrapper_output" cmake --build --preset=default

      - name: CTest
        run: ctest --preset default

      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: sonar-scanner

  install:
    runs-on: ubuntu-22.04
    steps:
      - name: Set up GCC
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 11
          platform: x64

      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v1.13

      - name: Install Conan
        id: conan
        uses: turtlebrowser/get-conan@main

      - name: Check Tool Versions
        run: |
          conan    --version
          cmake    --version
          c++      --version

      - name: Git Clone
        run: git clone --depth 1 https://github.com/strangeQuark1041/samarium.git

      - name: Conan Install
        run: |
          conan profile new default --detect
          conan profile update settings.compiler.libcxx=libstdc++11 default
          conan install samarium -b missing -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True

      - name: Conan Create
        run: conan create samarium -b missing -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True

      - name: Run Example
        run: |
          mkdir -p example
          cd example
          git clone --depth 1 https://github.com/strangeQuark1041/samarium_example.git .
          cmake --preset=default
          cmake --build --preset=default
          ./build/example
